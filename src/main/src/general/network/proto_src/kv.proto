syntax = "proto3";
package kv;

message KeyRange {
  bytes start=1;
  bytes end=2;
}

message KvPair {
  bytes key=1;
  bytes value=2;
}


message KvRequest {
  message KvPutRequest{
    // required
    KvPair kv=1;
  }
  message KvGetRequest{
    // required
    KeyRange range=1;
  }
  message KvDeleteRequest{
    // required
    KeyRange range=1;
  }
  message KvLockRequest{
    bool read_or_write=1;
    repeated uint32 release_id=2;
    // required
    KeyRange range=3;
  }
  oneof op {
    KvPutRequest set=1;
    KvGetRequest get=2;
    KvDeleteRequest delete=3;
    KvLockRequest lock=4;
  }
}

message KvLockRequest{
  bytes key=1;
  uint32 read_0_write_1_unlock_2=2;
  // use release_id to do the unlock
  uint32 release_id=3;
}

message KvLockResponse{
  bool success=1;
  string context=2;
  uint32 release_id=3;
}

// message KvLockWaitAcquireNotifyRequest{
//   uint32 release_id=1;
// }

// message KvLockWaitAcquireNotifyResponse{}

message KvPairs{
  repeated KvPair kvs=1;
}

message KvResponse{
  message KvResponse{
    repeated KvPair kvs=1;
  }
  oneof resp {
    KvResponse common_resp=1;
    // 0 is invalid lock id
    uint32 lock_id=2;
  }
}

message KvRequests{
  string app=1;
  string func=2;
  repeated KvRequest requests=3;
  int64 prev_kv_opeid=4;
}

message KvResponses{
  repeated KvResponse responses=1;
}

// message MetaKvRequest{
//   KvRequest request=1;
// }

// message MetaKvResponse{
//   KvResponse response=1;
// }