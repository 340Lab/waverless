syntax = "proto3";
package proto;

// import "network/proto_src/kv.proto";

// message MakeSchePlanReq{
//     message AppFn{
//         string app=1;
//         string func=2;
//     }
//     enum TriggerType{
//         SetKv = 0;
//     }
//     repeated AppFn app_fns=1;
//     TriggerType trigger_type=2;
// }

// message MakeSchePlanResp{
//     // align to AppFn[]
//     repeated uint32 sche_target_node=1;
//     // the data target position
//     uint32 data_target_node=2;
// }

message DistributeTaskReq {
    message DataEventTriggerWrite {
        bytes key = 1;
        uint32 opeid = 2;
    }

    message DataEventTriggerNew {
        bytes key = 1;
        uint32 opeid = 2;
    }

    string app = 1;
    string func = 2;
    FnTaskId task_id = 3;
    FnTaskId trigger_src_task_id = 4;
    oneof trigger {
        DataEventTriggerWrite event_write = 5;  // For Write/WriteWithCondition
        DataEventTriggerNew event_new = 6;      // For New/NewWithCondition
    }
}

message FnTaskId{
    uint32 call_node_id=1;
    uint32 task_id=2;
}

message DistributeTaskResp {
    bool success = 1;
    string err_msg = 2;
}


// after master scheduled
// notify the src node task to wait for the target node task
message AddWaitTargetReq{
    uint32 src_task_id=1;
    uint32 task_run_node=2;
    FnTaskId sub_task_id=3;
}

message AddWaitTargetResp{
    bool success=1;
    string err_msg=2;
}

message ListenForTaskDoneReq{
    FnTaskId task_id=1;
}

message ListenForTaskDoneResp{
    bool success=1;
    string response_or_errmsg=2;
}